* PROGRAMA ADMENU.PRG
* RUTINA PARA CREAR Y EDITAR
* UN AMBIENTE ELECTORAL
* 11/05/95

DO CASE
	CASE OPC=1
		DIVIS()
	CASE OPC=2
		RSUB()
	CASE OPC=3
		USE CATALOG
		COUNT FOR .NOT. TIPO TO Vr
		CLOSE CATALOG
		IF Vr>0
			GENF()
		ENDIF
	CASE OPC=4
		PARG()
	CASE OPC=5
		CAND()
	CASE OPC=6
		RCAN()
	CASE OPC=7
		ESCON()
ENDCASE

STATIC FUNCTION DIVIS()
ADM:=.F.
@ 24, 0 CLEAR TO 24, 79
@ 24, 0 SAY CENTER("Espere un Momento...")
IF FILE("CATALOG.DBF")
USE CATALOG
IF FILE("DIVCATE.NTX")
SET INDEX TO DIVCATE
ELSE
INDEX ON ESCREF TO DIVCATE
ENDIF
IF LASTREC()>=4
SKIP
IF .NOT. FILE(NOM_ARCH+".DBF")
     WOPEN(7, 10, 12, 69, .T.)
     WBOX(1)
     @ 0, 0 SAY CENTER("Procedimiento Generador de Archivos")
     @ 1, 0 SAY CENTER("en Ejecuci¢n, Espere un Momento....")
     GO BOTTOM
     CREA:={}
     AADD(CREA, {"CODIGO", "C", 5, 0})
     AADD(CREA, {"NUM", "C", 2, 0})
     AADD(CREA, {"ACTA", "C", 6, 0})
     AADD(CREA, {"VOT","N", 6, 0})
     CREARCH()
     SKIP -1
  DO WHILE VAL(ESCAL)>1
     nREG:=RECNO()
     nESC:=ESCAL
     nTIP:=TIPO
     GO TOP
     SKIP
     DO WHILE VAL(ESCAL)<VAL(nESC)
	IF TIPO .OR. (nTIP .AND. VAL(ESCAL)=VAL(nESC)-1)
	  AADD(CREA, {(SUBSTR(LTRIM(NOMBRE), 1, 1)+ESCREF), "C", 2, 0})
	ENDIF
	SKIP
     ENDDO
     GO nREG
     IF nREG=(LASTREC()-1)
	     AADD(CREA, {"CODIGO", "C", 5, 0})
	     AADD(CREA, {"DESC", "C", 50, 0})
	     AADD(CREA, {"DIRE", "C", 65, 0})
	     AADD(CREA, {"N_MESAS", "N", 2, 0})
     ELSE
	     AADD(CREA, {(SUBSTR(LTRIM(NOMBRE), 1, 1)+ESCREF), "C", 2, 0})
	     IF nTIP
		AADD(CREA, {(SUBSTR(LTRIM(NOMBRE), 1, 1)+"DES"), "C", 30, 0})
		SEEK LTRIM(STR(VAL(nESC)+1))+"1"
		DO WHILE VAL(ESCAL)=VAL(nESC)+1
			IF .NOT. TIPO
				AADD(CREA, {"NO"+ESCREF, "N", 2, 0})
			ENDIF
			SKIP
		ENDDO
		GO nREG
	     ENDIF                                                                
     ENDIF
     AADD(CREA, {"VOT", "N", 6, 0})
     CREARCH()
     SKIP -1
  ENDDO
  @ 2, 0 SAY CENTER("Procedimiento generador de Indices")
  @ 3, 0 SAY CENTER("en Ejecuci¢n; Espere un Momento...")
  INDEXAR()
  WCLOSE()
ENDIF
ADM:=.T.
ELSE
ALERT("Subdivisiones son Insuficientes; Regrese a Inicio y Resuelva....",{"oK"})
ENDIF
ELSE
ALERT("Ejecute la Opci¢n Iniciar del Men£ Principal; y defina las Subdivisiones", {"oK"})
ENDIF
IF ADM
CLOSE ALL
ABREARCH()
VISION()
ENDIF
WCLOSE()
RETURN

STATIC FUNCTION CREARCH()
DBCREATE(NOM_ARCH, CREA)
REPLACE CATALOG->L_INF WITH LEN(CREA)
CREA:={}
RETURN

STATIC FUNCTION INDEXAR()
CLOSE ALL
USE CATALOG INDEX DIVCATE
IF .NOT. FILE("CATIND.DBF")
     CREA:={}
     AADD(CREA, {"ESCREF", "C", 2, 0})
     AADD(CREA, {"ID_EN", "C", 1, 0})
     AADD(CREA, {"NOMIND", "C", 8, 0})
     DBCREATE("CATIND", CREA)
     CREA:={}
ENDIF
USE CATIND NEW
INDEX ON ESCREF+ID_EN TO CATORD
SET INDEX TO CATORD
SELECT CATALOG
SET RELATION TO ESCREF INTO CATIND
GO BOTTOM
USE (NOM_ARCH) NEW
MNOMIND:=SUBSTR(ALIAS(),2,6)+"NUM"
DBCREATEINDEX(MNOMIND, "CODIGO+NUM", {|| (CODIGO+NUM)})
MID_EN:="0"
GUARNOM()
MNOMIND:=SUBSTR(ALIAS(),2,6)+"COD"
DBCREATEINDEX(MNOMIND, "CODIGO", {|| (CODIGO)})
MID_EN:="1"
GUARNOM()
SELECT CATALOG
CLOSE (NOM_ARCH)
SKIP -1
USE (NOM_ARCH) NEW
MNOMIND:=SUBSTR(ALIAS(),2,6)+"COD"
DBCREATEINDEX(MNOMIND, "CODIGO", {|| (CODIGO)})
MID_EN:="0"
GUARNOM()
SELECT CATALOG
CLOSE (NOM_ARCH)
DO WHILE VAL(ESCAL)>2
     I:=1
     ACA:={}
     USE (NOM_ARCH) NEW
     DO WHILE FIELDSIZE(i)=2
	  AADD(ACA, FIELDNAME(i))
	  i+=1
     ENDDO
     AINDE:=ALIAS()
     SELECT CATALOG
     nREG:=RECNO()
     nESC:=ESCAL
     nTP:=TIPO
     LOCATE FOR VAL(ESCAL)=VAL(nESC)-1
     DO WHILE VAL(ESCAL)=VAL(nESC)-1
	  Tp:=TIPO
	  USE (NOM_ARCH) NEW
	  CLA:=CLAVE()
	  CLOSE (CATALOG->NOM_ARCH)
	  SELECT (AINDE)
	  IF nTP .OR. Tp
	      CREAIND()
	      MID_EN:="1"
	      GUARNOM()
	  ENDIF
	  IF Tp .AND. nREG<(CATALOG->(LASTREC())-1)
	       CLA:=CLA+"+"+ACA[LEN(ACA)]
	       CREAIND()
	       MID_EN:="0"
	       GUARNOM()
	  ENDIF
	  SELECT CATALOG
	  SKIP
     ENDDO
     GO nREG
     SKIP -1
ENDDO

GO TOP
SKIP
DO WHILE VAL(ESCAL)=2
       USE (NOM_ARCH) NEW
	  CLA:=FIELDNAME(1)
	  CREAIND()
       MID_EN:="0"
       GUARNOM()
	  SELECT CATALOG
       SKIP
ENDDO
RETURN

STATIC FUNCTION CREAIND()
PUBLIC MNOMIND
MNOMIND:=SUBSTR(ALIAS(),2,6)+SUBSTR(CLA,LEN(CLA)-2,3)
DBCREATEINDEX(MNOMIND, CLA,{|| &CLA})
RETURN

STATIC FUNCTION CLAVE()
CLV:=""
FOR i=1 TO LEN(ACA)
     FOR j=1 TO CATALOG->L_INF
	  IF FIELDNAME(J)==ACA[I]
	       CLV+=ACA[I]+"+"
	  ENDIF
     NEXT j
NEXT i
CLV:=SUBSTR(CLV, 1, LEN(CLV)-1)
RETURN (CLV)

STATIC FUNCTION GUARNOM()
ARCHACT:=ALIAS()
SELECT CATIND
APPEND BLANK
REPLACE ESCREF WITH SUBSTR(MNOMIND,4,2), NOMIND WITH MNOMIND, ID_EN WITH MID_EN
SELECT (ARCHACT)
RETURN

FUNCTION ABREARCH()
LOCAL TMP1, TMP
CLOSE ALL
IF FILE("CATIND.DBF") .AND. FILE("CATORD.NTX")
	DV:=.T.
	USE CATIND INDEX CATORD NEW
	USE CATALOG INDEX DIVCATE NEW
	SET RELATION TO ESCREF INTO CATIND
	SKIP
	DO WHILE .NOT. EOF()
	     USE (NOM_ARCH) NEW
	     ABRE:=ALIAS()
	     SELECT CATIND
	     TMP:={}
	     DO WHILE ESCREF=(CATALOG->ESCREF)
		  AADD(TMP, {NOMIND, ID_EN})
		  SKIP
	     ENDDO
	     SELECT (ABRE)
	     TMP1:=TMP
	     TMP:=ASORT(TMP1,,,{|x,y| x[2]<y[2]})
	     TMP1:=""
	     FOR I=1 TO LEN(TMP)
		  DBSETINDEX(TMP[I,1])
	     NEXT
	     SELECT CATALOG
	     SKIP
	ENDDO
	CLOSE CATIND
ELSE
	DV:=.F.
ENDIF
RETURN (DV)

STATIC FUNCTION VISION()
SET KEY 408 TO MOVER()
SET KEY 413 TO MOVER()
SET KEY 411 TO MOVER()
SET KEY 416 TO MOVER()

SELECT CATALOG
COUNT TO LgDiv FOR TIPO
oDIV:=ARRAY(LgDiv-1)
LOCATE FOR VAL(ESCAL)=2 .AND. TIPO
nREG:=RECNO()
nESC:=ESCAL
ETIQ:={}
LOCATE FOR VAL(ESCAL)=VAL(nESC)+1
DO WHILE VAL(ESCAL)=VAL(nESC)+1
	IF .NOT. TIPO
		AADD(ETIQ, "N§ "+TRIM(CATALOG->NOMBRE))
	ENDIF
	SKIP
ENDDO
ETIQ1:={}
LOCATE FOR VAL(ESCAL)=VAL(nESC)-1
DO WHILE VAL(ESCAL)=VAL(nESC)-1
	IF .NOT. TIPO
		AADD(ETIQ1, TRIM(CATALOG->NOMBRE))
	ENDIF
	SKIP
ENDDO
GO nREG
SELECT (NOM_ARCH)
@ 24, 0 CLEAR TO 24, 79
ColFin:=39
FOR i=1 TO LEN(ETIQ)
	ColFin+=LEN(ETIQ[i])
NEXT i
FOR i=1 TO LEN(ETIQ1)
	ColFin+=LEN(ETIQ1[i])
NEXT i
WOPEN( 3, 0, 15, ColFin,.T.)
WBOX(0)
TITW:=TRIM(Plr(CATALOG->NOMBRE))
ARTB:=ALIAS()
DIALOG()
@ 0,  0 SAY CENTER(TITW, ColFin-2)
WINUS:=WSELECT()
WSELECT(0)
@ 24, 0 SAY "Alt+     <A>gregar     <B>orrar     <C>onsultar     <E>ditar     || <Esc> Salir"
WSELECT(WINUS)
EtiqPri:=ETIQ1
ETIQ1:=NIL
AADD(EtiqPri, "Cod")
AADD(EtiqPri, "Nombre")
FOR i=1 TO LEN(ETIQ)
AADD(EtiqPri, ETIQ[i])
NEXT i
ETIQ:=NIL
GuExp:={}
oDIV[1]:=CREABROWSE(2, 2, 8, ColFin-2, VAL(CATALOG->ESCAL)-1)
GO TOP
DO WHILE .NOT. oDIV[1]:STABILIZE()
ENDDO
oTAB:=oDIV[1]

DO WHILE .T.
     DO WHILE NEXTKEY()==0 .AND. .NOT. oTAB:STABILIZE()
     ENDDO
     IF oTAB:HITTOP .OR. oTAB:HITBOTTOM
	TONE(2000)
     ENDIF
     TECLA:=INKEY(0)

     IF TECLA==27
	  EXIT
     ELSE
	  PROTECLA(TECLA)
     ENDIF
ENDDO
WACLOSE()
SET KEY 408 TO
SET KEY 413 TO
SET KEY 416 TO
SET KEY 411 TO

CLOSE ALL
RETURN

STATIC FUNCTION CREABROWSE(nLINT, nCOLT, nLINB, nCOLB, nINI)
@ nLINT-1, nCOLT-1 TO nLINB+1, nCOLB+1
oTAB:=TBROWSEDB(nLINT, nCOLT, nLINB, nCOLB)

oTAB:HEADSEP:=CHR(205)+CHR(209)+CHR(205)
oTAB:COLSEP:=CHR(32)+CHR(179)+CHR(32)
oTAB:FOOTSEP:=CHR(205)+CHR(207)+CHR(205)

FOR i=1 TO LEN(EtiqPri)
    oTAB:ADDCOLUMN(TBCOLUMNNEW(EtiqPri[i], FIELDBLOCK(FIELDNAME(nINI+i-1), SELE())))
NEXT

RETURN (oTAB)

STATIC FUNCTION PROTECLA(TECLA)
DO CASE
     CASE TECLA==5           ;oTAB:UP()
     CASE TECLA==24          ;oTAB:DOWN()
     CASE TECLA==19          ;oTAB:LEFT()
     CASE TECLA==26          ;oTAB:PANLEFT()
     CASE TECLA==4           ;oTAB:RIGHT()
     CASE TECLA==2           ;oTAB:PANRIGHT()
     CASE TECLA==18          ;oTAB:PAGEUP()
     CASE TECLA==31          ;oTAB:GOTOP()
     CASE TECLA==3           ;oTAB:PAGEDOWN()
     CASE TECLA==30          ;oTAB:GOBOTTOM()
     CASE TECLA==1           ;oTAB:HOME()
     CASE TECLA==29          ;oTAB:PANHOME()
     CASE TECLA==6           ;oTAB:END()
     CASE TECLA==23          ;oTAB:PANEND()
     CASE TECLA==28          ;HELP(PROCNAME(1))
     CASE TECLA==274         ;EDITA(oTAB, 1)
     CASE TECLA==304         ;BORRA(oTAB, 1)
     CASE TECLA==286         ;AGREGA(oTAB)
     CASE TECLA==299         ;REFRES()
     CASE TECLA==302         ;CONSULTA()
     CASE TECLA==-30         ;REGRESA()
     CASE TECLA==408	     ;MOVER()
     CASE TECLA==413	     ;MOVER()
     CASE TECLA==416	     ;MOVER()
     CASE TECLA==411	     ;MOVER()
     OTHERWISE               ;TONE(125); TONE(300)
ENDCASE
RETURN

FUNCTION EDITA(oTAB, Vld)
LOCAL oCOLUMNA, oGET, nREG, Pcam, nESC, ARSEL, SN
ESTABILIZE(oTAB)
nREG:=RECNO()
ACA:=&(INDEXKEY(0))
IF Vld=1
	Pcam:=VAL(CATALOG->ESCAL)-1+oTAB:colPos-1
ELSEIF Vld=2
	Pcam:=FCOUNT()-3+oTAB:colpos
ELSEIF Vld=3
	Pcam:=oTAB:colpos
ENDIF
SN:=.T.
IF FIELDNAME(Pcam)$INDEXKEY(0) .AND. Vld=1 .AND. CATALOG->(RECNO())<CATALOG->(LASTREC())-1
	nREG1:=CATALOG->(RECNO())
	nESC:=CATALOG->ESCAL
	VALOR:=INDEXKEY(0)
	ARSEL:=ALIAS()
	SELECT CATALOG
	LOCATE FOR (VAL(ESCAL)>VAL(nESC)) .AND. TIPO
	SELECT (NOM_ARCH)
	LOCATE FOR &VALOR=ACA
	IF(FOUND(), SN:=.F., SN:=.T.)
	SELECT CATALOG
	GO nREG1
	SELECT (ARSEL)
ELSEIF (oTAB:colPos=1) .AND. (Vld=2)
	USE INTERM INDEX INTERM NEW
	DBSEEK(ACA)
	IF(FOUND(), SN:=.F., SN:=.T.)
	CLOSE INTERM
	SELECT CANDI
ELSEIF (oTAB:colPos=1) .AND. (Vld=3)
	USE INTERM INDEX INTERM NEW
	LOCATE FOR INTERM->NO==ACA
	IF(FOUND(), SN:=.F., SN:=.T.)
	CLOSE INTERM
	SELECT PART_GRP
ENDIF

IF .NOT. SN
	Vnt:=WSELECT()
	WSELECT(0)
	Msg:=SAVESCREEN(24, 0, 24, 79)
	@ 24, 0 CLEAR TO 24, 79
	@ 24, 0 SAY CENTER("Imposible Editar, CAMPO CLAVE establece v¡nculo")
	TONE(1250); TONE(3000)
	INKEY(0)
	RESTSCREEN(24, 0, 24, 79, Msg)
	WSELECT(Vnt)
	RETURN
ENDIF

oCOLUMNA:=oTAB:getColumn(oTAB:colPos)
IF FIELDTYPE(Pcam)="C" .AND. FIELDSIZE(Pcam)=2
	oGET:=GetNew(ROW(), COL(), oCOLUMNA:block, oCOLUMNA:heading, "99")
	oGET:POSTBLOCK:={|| IF(SPACE(1)$FIELDGET(Pcam), .F., .T.)}
ELSEIF FIELDTYPE(Pcam)="C" .AND. FIELDSIZE(Pcam)>2
	oGET:=GetNew(ROW(), COL(), oCOLUMNA:block, oCOLUMNA:heading, "@!")
ELSEIF FIELDTYPE(Pcam)="N"
	oGET:=GetNew(ROW(), COL(), oCOLUMNA:block, oCOLUMNA:heading)
ENDIF

SETCURSOR(1)
ReadModal({oGet})
oTAB:REFRESHCURRENT()
SETCURSOR(0)

IF .NOT. (ACA==&(INDEXKEY(0)))
	oTAB:REFRESHALL()
	ESTABILIZE(oTAB)
	DO WHILE (RECNO() !=nREG)
		oTAB:UP()
		ESTABILIZE(oTAB)
	ENDDO
ENDIF
RETURN

FUNCTION BORRA(oTAB, Vld)
ACA:=&(INDEXKEY(0))
SN:=.T.
IF Vld=1 .AND. CATALOG->(RECNO())<CATALOG->(LASTREC())-1
	nREG1:=CATALOG->(RECNO())
	nESC:=CATALOG->ESCAL
	VALOR:=INDEXKEY(0)
	ARSEL:=ALIAS()
	SELECT CATALOG
	LOCATE FOR (VAL(ESCAL)>VAL(nESC)) .AND. TIPO
	SELECT (NOM_ARCH)
	LOCATE FOR &VALOR=ACA
	IF(FOUND(), SN:=.F., SN:=.T.)
	SELECT CATALOG
	GO nREG1
	SELECT (ARSEL)
ELSEIF  Vld=2
	USE INTERM INDEX INTERM NEW
	DBSEEK(ACA)
	IF(FOUND(), SN:=.F., SN:=.T.)
	CLOSE INTERM
	SELECT CANDI
ELSEIF  Vld=3
	USE INTERM INDEX INTERM NEW
	LOCATE FOR INTERM->NO==ACA
	IF(FOUND(), SN:=.F., SN:=.T.)
	CLOSE INTERM
	SELECT PART_GRP
ENDIF

IF .NOT. SN
	Vnt:=WSELECT()
	WSELECT(0)
	Msg:=SAVESCREEN(24, 0, 24, 79)
	@ 24, 0 CLEAR TO 24, 79
	@ 24, 0 SAY CENTER("Imposible Borrar, CAMPO CLAVE establece v¡nculo")
	TONE(1250); TONE(3000)
	INKEY(0)
	RESTSCREEN(24, 0, 24, 79, Msg)
	WSELECT(Vnt)
	RETURN
ENDIF

TONE(1000) ; TONE(500) ; TONE(100)
DELETE
SKIP
oTAB:REFRESHALL()
ESTABILIZE(oTAB)
RETURN NIL

FUNCTION ESTABILIZE(OBJETO)
DO WHILE .NOT. OBJETO:STABILIZE()
ENDDO
RETURN

STATIC FUNCTION DIALOG()
SETCLEARB(176)
ColorAct:=SETCOLOR()
SETCOLOR("")
@ 10, 1 CLEAR TO 10, ColFin-2
FOR J=4 TO 8
     @ J, 0 SAY CHR(176)
NEXT
SETCLEARB(255)
SETCOLOR("W+/N")
@ 10,  1 SAY CHR(17)
@ 10, ColFin-2 SAY CHR(16)
@  4,  0 SAY CHR(24)
@  8,  0 SAY CHR(25)
SETCOLOR(ColorAct)
RETURN

STATIC FUNCTION AGREGA(oTAB)
nVar:={}
nRem:=VAL(CATALOG->ESCAL)-2
FOR i=1 TO nRem
	AADD(nVar, FIELDNAME(i))
NEXT i
IF EOF()
	Cod_Ag:=1
ELSE
	Nor:=RECNO()
	GO BOTTOM
	FOR j=1 TO CATALOG->L_INF
		IF FIELDSIZE(j)>=30
			EXIT
		ENDIF
	NEXT j
	Cod_Ag:=VAL(FIELDGET(j-1))+1
	GO Nor
ENDIF

SELECT CATALOG
nREG:=RECNO()
nESC:=ESCAL
ETIQ1:={}
mVAR:={}
LOCATE FOR VAL(CATALOG->ESCAL)=VAL(nESC)-1
DO WHILE VAL(CATALOG->ESCAL)=VAL(nESC)-1
	IF .NOT. TIPO
		AADD(ETIQ1, TRIM(CATALOG->NOMBRE))
		AADD(mVAR, SPACE(2))
	ENDIF
	SKIP
ENDDO
IF nREG<LASTREC()-1
	AADD(ETIQ1, "C¢digo")
	AADD(ETIQ1, "Nombre")
	Cod_Ag:=LTRIM(STR(Cod_Ag))
	IF(LEN(Cod_Ag)=1, Cod_Ag:="0"+Cod_Ag, Cod_Ag:=Cod_Ag)
	AADD(mVAR, Cod_Ag)
	AADD(mVAR, SPACE(30))
ELSEIF nREG=LASTREC()-1
	AADD(ETIQ1, "C¢digo")
	AADD(ETIQ1, "Nombre")
	AADD(ETIQ1, "Direcci¢n")
	AADD(mVAR, SPACE(5))
	AADD(mVAR, SPACE(50))
	AADD(mVAR, SPACE(65))
ENDIF
LOCATE FOR VAL(CATALOG->ESCAL)=VAL(nESC)+1
DO WHILE VAL(CATALOG->ESCAL)=VAL(nESC)+1
	IF .NOT. TIPO
		AADD(ETIQ1, "N§ "+TRIM(CATALOG->NOMBRE))
		AADD(mVAR, 0)
	ENDIF
	SKIP
ENDDO

WOPEN( 10, 3, LEN(mVAR)+17, 79, .T.)
WBOX(1)
GO nREG
TITW:=TRIM(CATALOG->NOMBRE)
@ 0, 0 SAY CENTER(TITW+": Agregar")
@ 1, 0 TO 1, 73
SETCURSOR(1)

FOR i=1 TO LEN(mVAR)
	IF VALTYPE(mVAR[i])="C" .AND. LEN(mVAR[i])=2 .AND. LEN(mVAR[i+1])<30
		@ i+1, 0 SAY ETIQ1[i] GET mVAR[i] PICT "99"
	ELSEIF VALTYPE(mVAR[i])="C" .AND. LEN(mVAR[i])=2 .AND. LEN(mVAR[i+1])>=30
		@ i+1, 0 SAY ETIQ1[i] GET mVAR[i] PICT "99" WHEN CUANDO()
	ELSEIF VALTYPE(mVAR[i])="C" .AND. LEN(mVAR[i])>2
		@ i+1, 0 SAY ETIQ1[i] GET mVAR[i] PICT "@!"
	ELSEIF VALTYPE(mVAR[i])="N"
		@ i+1, 0 SAY ETIQ1[i] GET mVAR[i] PICT "99" RANGE 1, 30
	ENDIF
NEXT i
READ
SETCURSOR(0)
Vlda:=.F.
FOR i=1 TO LEN(mVAR)
	IF VALTYPE(mVAR[i])="C" .AND. (!EMPTY(mVAR[i])) .AND. LEN(mVAR[i])>2
		Vlda:=.T.
		EXIT
	ENDIF
NEXT i
cVar:={}
IF Vlda
	IF VAL(nESC)>2
		LOCATE FOR VAL(CATALOG->ESCAL)=VAL(nESC)-1 .AND. TIPO
		SELECT (NOM_ARCH)
		FOR i=1 TO nRem
			AADD(cVar, &(nVar[i]))
		NEXT i
		SELECT CATALOG
	ENDIF
	FOR i=1 TO LEN(mVAR)
		AADD(cVar, mVAR[i])
	NEXT i
	mVAR:=NIL
	GO nREG
	SELECT (NOM_ARCH)
	APPEND BLANK
	FOR i=1 TO LEN(cVar)
		FIELDPUT(i, cVar[i])
	NEXT i
	SELECT CATALOG
ENDIF
WCLOSE()
GO nREG
SELECT (NOM_ARCH)
oTAB:REFRESHALL()
ESTABILIZE(oTAB)
RETURN

FUNCTION CUANDO()
	KEYBOARD CHR(13)
RETURN (.T.)

STATIC FUNCTION CONSULTA()
PUBLIC CLAVE, CLAVEGEN
ACTUAL:=ALIAS()
Vacio:=EOF()
CLAVEGEN:=&(INDEXKEY(0))
CLAVE:=INDEXKEY(0)
AADD(GuExp, { CLAVE, CLAVEGEN})
SELECT CATALOG
IF RECNO()<(LASTREC()-1) .AND. .NOT. Vacio
	nESC:=ESCAL
	ETIQ1:={}
	DO WHILE VAL(ESCAL)=VAL(nESC)
		IF .NOT. TIPO
			AADD(ETIQ1, TRIM(CATALOG->NOMBRE))
		ENDIF
		SKIP
	ENDDO
	nESC:=ESCAL
	nREG:=RECNO()
	ETIQ:={}
	LOCATE FOR VAL(ESCAL)=VAL(nESC)+1
	DO WHILE VAL(ESCAL)=VAL(nESC)+1
		IF .NOT. TIPO
			AADD(ETIQ, "N§ "+TRIM(CATALOG->NOMBRE))
		ENDIF
		SKIP
	ENDDO
	GO nREG
	SELECT (NOM_ARCH)
	SET FILTER TO &CLAVE=CLAVEGEN
	GO TOP
	IF CATALOG->(RECNO())<CATALOG->(LASTREC())-1
		ColFin:=39
		FOR i=1 TO LEN(ETIQ1)
			ColFin+=LEN(ETIQ1[i])
		NEXT i
		FOR i=1 TO LEN(ETIQ)
			ColFin+=LEN(ETIQ[i])
		NEXT i
	ELSEIF CATALOG->(RECNO())=CATALOG->(LASTREC())-1
		ColFin:=79
	ENDIF
	WOPEN( 3, 0, 15, ColFin, .T.)
	WBOX(0)
	TITW:=TRIM(Plr(CATALOG->NOMBRE))
	ARTB:=ALIAS()
	DIALOG()
	@ 0, 0 SAY CENTER(TITW, ColFin-2)
	EtiqPri:=ETIQ1
	ETIQ1:=NIL
	AADD(EtiqPri, "Cod")
	AADD(EtiqPri, "Nombre")
	IF CATALOG->(RECNO())=CATALOG->(LASTREC())-1
		AADD(EtiqPri, "Direcci¢n")
	ENDIF
	FOR i=1 TO LEN(ETIQ)
	AADD(EtiqPri, ETIQ[i])
	NEXT i
	ETIQ:=NIL
	nOBT:=VAL(CATALOG->ESCAL)-1
	oDIV[nOBT]:=CREABROWSE(2, 2, 8, ColFin-2, VAL(CATALOG->ESCAL)-1)
	DO WHILE .NOT. oDIV[nOBT]:STABILIZE()
	ENDDO
	oTAB:=oDIV[nOBT]
ELSE
SELECT (ACTUAL)
ENDIF
RETURN

STATIC FUNCTION REGRESA()
IF VAL(CATALOG->ESCAL)>2
	SET FILTER TO
	NFilt:=LEN(GuExp)
	ADEL(GuExp, NFilt)
	NFilt-=1
	ASIZE(GuExp, NFilt)
	IF NFilt>0
		CLAVEGEN:=Guexp[Nfilt, 2]
		CLAVE:=GuExp[NFilt, 1]
	ENDIF
	VenAct:=WSELECT()
	oTAB:DEHILITE()
	WCLOSE()
	SELECT CATALOG
	nESC:=ESCAL
	GO TOP
	LOCATE FOR VAL(ESCAL)=VAL(nESC)-1 .AND. TIPO
	nOBT:=VAL(CATALOG->ESCAL)-1
	oTAB:=oDIV[nOBT]
	SELECT (NOM_ARCH)
	oTAB:HILITE()
	ESTABILIZE(oTAB)
	WSELECT(VenAct-1)
ENDIF
RETURN

STATIC FUNCTION MOVER()
IF LASTKEY()==408
	WMOVE(WROW()-1, WCOL())
ELSEIF LASTKEY()==413
	WMOVE(WROW(), WCOL()+1)
ELSEIF LASTKEY()==416
	WMOVE(WROW()+1, WCOL())
ELSEIF LASTKEY()==411
	WMOVE(WROW(), WCOL()-1)
ENDIF
RETURN